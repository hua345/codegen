{{ if .SupportI18n }}spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8
{{ end }}

{{ if .SupportRedis}}
# Redis服务器地址
spring.redis.host={{.Redis.Host}}
# Redis服务器连接端口
spring.redis.port={{.Redis.Port}}
# Redis服务器连接密码（默认为空）
spring.redis.password={{.Redis.Password}}
# 连接超时时间（毫秒）
spring.redis.timeout={{.Redis.Timeout}}
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database={{.Redis.Database}}
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active={{.Redis.MaxActive}}
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle={{.Redis.MaxIdle}}
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
{{ end }}

# https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html
# useSSL:是否使用SSL证书验证;
# mysql驱动8.0没有userLegacyDatetimeCode和userTimezone两个参数
# serverTimezone:设置时区;
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.url=jdbc:{{.Database.Type}}://{{.Database.Host}}/{{.Database.DatabaseName}}?useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.druid.username={{.Database.Username}}
spring.datasource.druid.password={{.Database.Password}}
spring.datasource.druid.driverClassName={{.JdbcDriverClass}}
# open /druid/index.html
# dataSource Pool configuration
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxActive.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.exceptionSorter=true
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
# Druid内置提供一个StatFilter，用于统计监控信息
# wall用于防火墙（防止SQL注入）
# slf4j日志打印
spring.datasource.druid.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
# StatFilter属性slowSqlMillis用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢。
# slowSqlMillis的缺省值为3000，也就是3秒。
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true

# config/DruidConfiguration中已经配置了登录用户
# 浏览器打开 /druid/index.html,账号默认admin
#pagehelper
pagehelper.helperDialect=mariaDB
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
